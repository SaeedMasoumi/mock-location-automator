apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion Version.compileSdk
    buildToolsVersion Version.buildTools
    defaultConfig {
        applicationId "io.saeid.automator.location.sample"
        minSdkVersion Version.minSdk
        targetSdkVersion Version.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Version.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Version.coroutine}"
    implementation "androidx.appcompat:appcompat:${Version.appcompat}"
    implementation "androidx.core:core-ktx:${Version.appcompat}"
    implementation project(':mock_location_automator')
    implementation "com.google.android.gms:play-services-maps:${Version.playServices}"
    implementation "com.google.android.gms:play-services-location:${Version.playServices}"

    testImplementation "junit:junit:${Version.junit}"
    androidTestImplementation "androidx.test:runner:${Version.androidxTest}"
    androidTestImplementation "androidx.test:rules:${Version.androidxTest}"
    androidTestImplementation "androidx.test.ext:junit:${Version.androidxTestExt}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Version.espresso}"
}
